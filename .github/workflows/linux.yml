name: Build (Linux)

on:
  push:
    paths:
      - 'CMakeLists.txt'
      - 'source/*'
      - 'rtc_source/*'
      - 'sycl_source/*'
      - '.github/workflows/linux.yml'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Ninja
      run: pip install ninja

    - name: Setup CUDA
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
        sudo dpkg -i cuda-keyring_1.1-1_all.deb
        sudo apt-get update
        sudo apt-get install -y cuda-nvcc-13-0 cuda-cudart-dev-13-0 cuda-nvrtc-dev-13-0
        echo "PATH=/usr/local/cuda/bin${PATH:+:${PATH}}" >> $GITHUB_ENV
        echo "CUDA_PATH=/usr/local/cuda" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=/usr/local/cuda/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}" >> $GITHUB_ENV

    - name: Download VapourSynth headers
      run: |
        wget -q -O vs.zip https://github.com/vapoursynth/vapoursynth/archive/refs/tags/R57.zip
        unzip -q vs.zip
        mv vapoursynth*/ vapoursynth

    - name: Configure (CUDA)
      run: cmake -S . -B build -G Ninja -LA
        -D CMAKE_BUILD_TYPE=Release
        -D USE_NVRTC_STATIC=ON
        -D VAPOURSYNTH_INCLUDE_DIRECTORY="`pwd`/vapoursynth/include"
        -D CMAKE_CXX_COMPILER=g++
        -D CMAKE_CXX_FLAGS="-Wall -ffast-math -march=x86-64-v3"
        -D CMAKE_CUDA_FLAGS="--threads 0 --use_fast_math --resource-usage -Wno-deprecated-gpu-targets"
        -D CMAKE_CUDA_ARCHITECTURES="75;86-real;89-real;120-real"

    - name: Build (CUDA)
      run: cmake --build build --verbose

    - name: Install (CUDA)
      run: cmake --install build --prefix install

    - name: Setup SYCL
      if: false
      run: |
        wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
          | gpg --dearmor \
          | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null

        echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" \
          | sudo tee /etc/apt/sources.list.d/oneAPI.list

        sudo apt-get update
        sudo apt-get install -y intel-oneapi-dpcpp-cpp-2023.2.1

    - name: Configure (SYCL)
      if: false
      run: |
        source /opt/intel/oneapi/compiler/latest/env/vars.sh

        cmake -S . -B build_sycl -G Ninja -LA \
          -D CMAKE_BUILD_TYPE=Release \
          -D ENABLE_CUDA=OFF \
          -D ENABLE_CUDA_RTC=OFF \
          -D ENABLE_SYCL=ON \
          -D VAPOURSYNTH_INCLUDE_DIRECTORY="`pwd`/vapoursynth/include" \
          -D CMAKE_CXX_COMPILER=icpx \
          -D CMAKE_CXX_FLAGS="-Wall -ffast-math -march=x86-64-v3"

    - name: Build (SYCL)
      if: false
      run: cmake --build build_sycl --verbose

    - name: Install (SYCL)
      if: false
      run: cmake --install build_sycl --prefix install

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: BilateralGPU-Linux
        path: install/lib/*.so

